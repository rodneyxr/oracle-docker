# apiVersion: batch/v1
# kind: Job
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "oracle-apex.fullname" . }}-apex-install
  annotations:
    "helm.sh/hook": post-install,post-upgrade,pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
# template:
    # spec:
  restartPolicy: Never
  initContainers:
    - name: download-apex
      image: {{ .Values.ords.image }}
      command: ["/bin/sh", "-c"]
      args:
        - |
          set -e
          echo "Checking if APEX is already extracted..."
          if [ -d "/opt/oracle/apex/images" ]; then
            echo "APEX is already downloaded and extracted. Skipping."
            exit 0
          fi

          echo "Downloading APEX..."
          curl -L -o /opt/oracle/apex/apex-latest.zip https://download.oracle.com/otn_software/apex/apex-latest.zip

          echo "Extracting APEX..."
          cd /opt/oracle && jar xf /opt/oracle/apex/apex-latest.zip apex/
          rm /opt/oracle/apex/apex-latest.zip  # Clean up zip file
          
          echo "APEX Download and Extraction Complete."
      volumeMounts:
        - name: apex-storage
          mountPath: /opt/oracle/apex
    - name: wait-for-db
      image: alpine:latest
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo "Waiting for Oracle DB to be ready..."
          until nc -z {{ include "oracle-apex.fullname" . }}-db {{ .Values.db.service.port }}; do
            echo "Database not ready. Retrying in 5 seconds..."
            sleep 5
          done
          echo "Database is up!"

  containers:
    - name: install-apex
      image: {{ .Values.db.image }}
      command: ["sleep", "infinity"]  # Sleep indefinitely to keep the pod running
      # sqlplus sys/password@apex-oracle-apex-db:1521/XEPDB1 AS SYSDBA @apexins.sql SYSAUX SYSAUX TEMP /i/
      # sqlplus sys/password@apex-oracle-apex-db:1521/XEPDB1 AS SYSDBA @apxchpwd.sql
      # sqlplus sys/password@apex-oracle-apex-db:1521/XEPDB1 AS SYSDBA <<EOF
@apxchpwd.sql
your_admin_username
your_new_password
your_new_password  -- Confirm password
EOF
      command: ["/bin/bash", "-c"]
      args:
        - |
          echo "Installing APEX..."
          cd /opt/oracle/apex
          
          # Create SQL script for installation
          # sqlplus sys/password@apex-oracle-apex-db:1521/XEPDB1 AS SYSDBA @apexins.sql SYSAUX SYSAUX TEMP /i/
          sqlplus sys/{{ .Values.db.sysPassword }}@{{ include "oracle-apex.fullname" . }}-db:1521/XEPDB1 AS SYSDBA <<EOF
          @apexins.sql SYSAUX SYSAUX TEMP /i/
          EOF

          # TODO: Create ADMIN user with a password
          # sqlplus sys/password@apex-oracle-apex-db:1521/XEPDB1 AS SYSDBA
          sqlplus sys/{{ .Values.db.sysPassword }}@{{ include "oracle-apex.fullname" . }}-db:1521/XEPDB1 AS SYSDBA <<EOF
          @@core/scripts/set_appun.sql

          alter session set current_schema = &APPUN;
          BEGIN
              -- Create or update the APEX admin user
              wwv_flow_instance_admin.create_or_update_admin_user(
                  p_username => 'ADMIN',
                  p_email    => 'admin@example.com',
                  p_password => 'P@ssw0rd!'
              );
              COMMIT;
          END;
          /
          EOF

          sqlplus sys/{{ .Values.db.sysPassword }}@{{ include "oracle-apex.fullname" . }}-db:1521/XEPDB1 AS SYSDBA <<EOF
          ALTER USER APEX_PUBLIC_USER ACCOUNT UNLOCK;
          EOF
          
          # Execute APEX installation
          sqlplus /nolog @install_apex.sql
          
          echo "APEX installation complete."
      volumeMounts:
        - name: apex-storage
          mountPath: /opt/oracle/apex
          readOnly: true
  volumes:
    - name: apex-storage
      persistentVolumeClaim:
        claimName: {{ include "oracle-apex.fullname" . }}-apex-pvc
